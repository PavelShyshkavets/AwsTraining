on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.API_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.API_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: book-api-repo
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
 
    - name: execite autoDocker script
      run: |
        chmod +x "${GITHUB_WORKSPACE}/.github/autoDocker.sh"
        "${GITHUB_WORKSPACE}/.github/autoDocker.sh"
        
    - uses: actions/checkout@v2

    - name: AWS SSM Send-Command
      uses: peterkimzz/aws-ssm-send-command@master
      id: ssm
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        aws-access-key-id: ${{ secrets.API_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.API_AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.INSTANCE_ID }}

        working-directory: /home/ubuntu/application
        command: sh autoDocker.sh
